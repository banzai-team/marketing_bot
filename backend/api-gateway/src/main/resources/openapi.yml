openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8090
    description: Generated server url
paths:
  /api/feedback:
    post:
      tags:
        - user-feedback-controller
      operationId: postModelFeedback
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserFeedbackDTO'
        required: true
      responses:
        "200":
          description: OK
  /api/model/query/model-request:
    get:
      tags:
        - query-controller
      operationId: listModelRequests
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: dialogId
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageModelRequestListingItem'
  /api/model/query/model-request/{id}:
    get:
      tags:
        - query-controller
      operationId: listModelRequests_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ModelRequestListingItem'
  /api/model/evaluate:
    post:
      tags:
        - interception-controller
      operationId: doInterceptModelCall
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ModelResponseDTO'
components:
  schemas:
    UserFeedbackDTO:
      type: object
      properties:
        userId:
          type: integer
          format: int64
        modelResponseId:
          type: integer
          format: int64
        correct:
          type: boolean
    ModelRequestListItemDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        dialogId:
          type: integer
          format: int64
        messages:
          type: array
          items:
            type: string
        text:
          type: string
        response:
          $ref: '#/components/schemas/ModelResponseListItemDTO'
        operator:
          type: boolean
    ModelRequestListingItem:
      type: object
      properties:
        request:
          $ref: '#/components/schemas/ModelRequestListItemDTO'
    ModelResponseListItemDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        offerPurchase:
          type: boolean
        dialogEvaluation:
          type: number
          format: float
        stopTopics:
          type: array
          items:
            type: string
        feedbacks:
          type: array
          items:
            $ref: '#/components/schemas/UserFeedbackListItemDTO'
    PageModelRequestListingItem:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        pageable:
          $ref: '#/components/schemas/PageableObject'
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/ModelRequestListingItem'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        empty:
          type: boolean
    PageableObject:
      type: object
      properties:
        paged:
          type: boolean
        unpaged:
          type: boolean
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        offset:
          type: integer
          format: int64
        sort:
          $ref: '#/components/schemas/SortObject'
    SortObject:
      type: object
      properties:
        unsorted:
          type: boolean
        sorted:
          type: boolean
        empty:
          type: boolean
    UserFeedbackListItemDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
        modelResponseId:
          type: integer
          format: int64
        correct:
          type: boolean
    ModelRequestDTO:
      type: object
      properties:
        id_sequence:
          type: integer
          format: int64
        messages:
          type: array
          items:
            type: string
        text:
          type: string
        is_operator:
          type: boolean
    ModelResponseDTO:
      type: object
      properties:
        offer_confidence:
          type: boolean
        sentimemt_loggit:
          type: number
          format: float
        stop_topics:
          type: array
          items:
            type: string